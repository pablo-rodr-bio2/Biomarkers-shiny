shiny::runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
value <- "<a href=\"https://www.ncbi.nlm.nih.gov/gene/3043\" target=\"_blank\">HBB</a>"
value
install.packages("urltools")
install.packages("shinycustomloader")
runApp('Biomarkers_2022/Biomarkers-shiny')
value
library(urltools)
urltools::parameters(value)
urltools::url_parse(value)
str(urltools::url_parse(value))
runApp('Biomarkers_2022/Biomarkers-shiny')
source("~/.active-rstudio-document", echo=TRUE)
value <- "<a href='https://www.ncbi.nlm.nih.gov/gene/3043' target='_blank'>HBB</a>"
str(urltools::url_parse(value))
runApp('Biomarkers_2022/Biomarkers-shiny')
param_get(value, "gene")
param_get(value, "path")
parsed_url <- url_parse(value)
parsed_url
parsed_url$scheme
parsed_url$domain
parsed_url$path
basename(value)
library(XML)
install.packages(XML)
install.packages("XML")
install.packages("rvest")
install.packages("rvest")
library(rvest)
html_attr(value)
html_attrs(value)
value <- html_element()
value %>%  html_element()
minimal_html(value)
minimal_html(value) %>% html_element("a")
minimal_html(value) %>% html_element("a") %>% html_attr("href")
pool <- dbPool(
drv = MariaDB(),
host = "localhost",
username = "psebastian",
password = "",
dbname = "biomarkers_2022",
port = 3306
)
library(pool)
pool <- dbPool(
drv = MariaDB(),
host = "localhost",
username = "psebastian",
password = "",
dbname = "biomarkers_2022",
port = 3306
)
library(shiny)
library(RMariaDB)
library(DT)
library(shinycustomloader)
library(dplyr)
library(bslib)
library(pool)
library(kableExtra)
pool <- dbPool(
drv = MariaDB(),
host = "localhost",
username = "psebastian",
password = "",
dbname = "biomarkers_2022",
port = 3306
)
pool %>%
tbl("genes") %>%
collect() %>%
()
pool %>%
tbl("genes") %>%
collect()
pool %>%
tbl("genes") %>%
add_column(Gene = createLink_Symbol(geneid, symbol))
collect()
createLink_Symbol <- function(geneid, symbol){
sprintf("<a href='https://www.ncbi.nlm.nih.gov/gene/%s' target='_blank'>%s</a>",geneid, symbol)
}
pool %>%
tbl("genes") %>%
add_column(Gene = createLink_Symbol(geneid, symbol))
collect()
library(tibble)
pool %>%
tbl("genes") %>%
add_column(Gene = createLink_Symbol(geneid, symbol))
pool %>%
tbl("genes") %>%
collect() %>%
add_column(Gene = createLink_Symbol(geneid, symbol))
pool %>%
tbl("genes") %>%
collect() %>%
mutate(Gene = createLink_Symbol(geneid, symbol))
pool %>%
tbl("genes") %>%
mutate(Gene = createLink_Symbol(geneid, symbol)) %>%
collect()
runApp('Biomarkers_2022/Biomarkers-shiny')
dt$dt_genes <- pool %>%
tbl("genes") %>%
collect() %>%
mutate(Gene = createLink_Symbol(geneid, symbol))
pool <- dbPool(
drv = MariaDB(),
host = "localhost",
username = "psebastian",
password = "",
dbname = "biomarkers_2022",
port = 3306
)
dt$dt_genes <- pool %>%
tbl("genes") %>%
collect() %>%
mutate(Gene = createLink_Symbol(geneid, symbol))
dt_genes <- pool %>%
tbl("genes") %>%
collect() %>%
mutate(Gene = createLink_Symbol(geneid, symbol))
dt_genes
value
dt_genes[Gene == value]
dt_genes["Gene" == value]
dt_genes$Gene
dt_genes["Gene" == value]
dt_genes[["Gene" == value]]
dt_genes %>% filter(Gene == value)
dt_genes %>% filter(Gene == value) %>%  select(geneid)
dt_genes %>% filter(Gene == value) %>%  select(geneid) %>%  as.character
runApp('Biomarkers_2022/Biomarkers-shiny')
dt_gds <- pool %>%
tbl("gene_disease_summary") %>%
collect()
pool <- dbPool(
drv = MariaDB(),
host = "localhost",
username = "psebastian",
password = "",
dbname = "biomarkers_2022",
port = 3306
)
dt_gds <- pool %>%
tbl("gene_disease_summary") %>%
collect()
value <- dt_genes %>% filter(Gene == value) %>%  select(geneid) %>%  as.character
value
dt_gds %>% filter(symbol == value)
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
pool <- dbPool(
drv = MariaDB(),
host = "localhost",
username = "psebastian",
password = "",
dbname = "biomarkers_2022",
port = 3306
)
dt_gd <- pool %>%
dbGetQuery(query) %>%
collect()
query <- "select gd.*, g.symbol, d.name
from gene_disease as gd
left join genes as g
on gd.geneid = g.geneid
left join diseases as d
on gd.diseaseid = d.diseaseid"
dt_gd <- pool %>%
dbGetQuery(query) %>%
collect()
dt_gd
colnames(dt_gd)
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
shiny::runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
library(ggpubr)
install.apckages("ggpubr")
installp.ackages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
pool <- dbPool(
drv = MariaDB(),
host = "localhost",
username = "psebastian",
password = "",
dbname = "biomarkers_2022",
port = 3306
)
query <- "select gd.*, g.symbol, d.name, s.year
from gene_disease as gd
left join genes as g
on gd.geneid = g.geneid
left join diseases as d
on gd.diseaseid = d.diseaseid
left join studies as s
on gd.nctid = s.nctid"
dt$dt_gd <- pool %>%
dbGetQuery(query) %>%
collect() %>%
filter( if( !is.null(dt$gd_symbol) ) symbol == dt$gd_symbol else TRUE ) %>%
filter( if( !is.null(dt$gd_name) ) name == dt$gd_name else TRUE ) %>%
filter( if( !is.null(dt$Biomarker) ) bmtype == dt$Biomarker else TRUE )
query <- "select gd.*, g.symbol, d.name, s.year
from gene_disease as gd
left join genes as g
on gd.geneid = g.geneid
left join diseases as d
on gd.diseaseid = d.diseaseid
left join studies as s
on gd.nctid = s.nctid"
dt$dt_gd <- pool %>%
dbGetQuery(query) %>%
collect()
query <- "select gd.*, g.symbol, d.name, s.year
from gene_disease as gd
left join genes as g
on gd.geneid = g.geneid
left join diseases as d
on gd.diseaseid = d.diseaseid
left join studies as s
on gd.nctid = s.nctid"
dt_gd <- pool %>%
dbGetQuery(query) %>%
collect()
gene <- "HBB"
dt_gd %>%
filter(geneid == gene) %>%
unique()
dt_gd
colnames(dt_gd)
dt_gd %>%
filter(symbol == gene) %>%
unique()
dt_gd %>%
filter(symbol == gene) %>%
unique() %>% group_by(name)
dt_gd %>%
filter(symbol == gene) %>%
unique() %>% group_by(name) %>%         MinYear = min(date, na.rm = T)
) %>% select(-date) %>% unique()
dt_gd %>%
filter(symbol == gene) %>%
unique() %>% group_by(name) %>% mutate(MinYear = min(date, na.rm = T)) %>% select(-date) %>% unique()
poolClose(pool)
pool <- dbPool(
drv = MariaDB(),
host = "localhost",
username = "psebastian",
password = "",
dbname = "biomarkers_2022",
port = 3306
)
query <- "select gd.*, g.symbol, d.name, s.year
from gene_disease as gd
left join genes as g
on gd.geneid = g.geneid
left join diseases as d
on gd.diseaseid = d.diseaseid
left join studies as s
on gd.nctid = s.nctid"
dt_gd <- pool %>%
dbGetQuery(query) %>%
collect()
colnames(dt_gd)
min(date, na.rm = T)
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
poolClose(pool)
pool <- dbPool(
drv = MariaDB(),
host = "localhost",
username = "psebastian",
password = "",
dbname = "biomarkers_2022",
port = 3306
)
query <- "select gd.*, g.symbol, d.name, s.year
from gene_disease as gd
left join genes as g
on gd.geneid = g.geneid
left join diseases as d
on gd.diseaseid = d.diseaseid
left join studies as s
on gd.nctid = s.nctid"
dt_gd <- pool %>%
dbGetQuery(query) %>%
collect()
gene <- "HBB"
dt_gd %>%
filter(symbol == gene) %>%
unique()
df <- dt_gd %>%
filter(symbol == gene) %>%
unique()
df
colnames(df)
df <-  df %>%
group_by(name) %>%
mutate(
MinYear = min(date, na.rm = T)
) %>% select(-year) %>% unique()
df
df <-  df %>%
group_by(name) %>%
mutate(
MinYear = min(year, na.rm = T)
) %>% select(-year) %>% unique()
df
df %>%  group_by( diseaseid  ) %>%   summarise(nclinicaltrials = n_distinct(nctid)) %>%
arrange(desc(nclinicaltrials)) %>% head(50)
tt <- df %>%  group_by( diseaseid  ) %>%   summarise(nclinicaltrials = n_distinct(nctid)) %>%
arrange(desc(nclinicaltrials)) %>% head(50)
merge(df, tt, by = c("diseaseid"))
df <- merge(df, tt, by = c("diseaseid"))
df %>% select(-nctid) %>% unique() %>%  arrange(MinYear)
df <- df %>% select(-nctid) %>% unique() %>%  arrange(MinYear)
df$id <- c(1:nrow(df))
df$label <- ifelse(nchar(df$name)> 20, paste0(substring(df$name, 1,20), "..."), as.character(df$name))
df
df[1,]
colnames(df)
# mutate(disease=factor(name, levels=rev(sort(unique(name)))))
p<- ggplot(df, aes(x= as.Date(as.numeric(MinYear)), y= id, size = nclinicaltrials, label=name)) +
geom_point(aes(fill="blue", alpha =0.5),  pch=21 )   +
geom_text_repel(aes(label = label),
size = 3.5, max.overlaps = 20) +theme_bw(base_size = 12) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y")+
ylab(paste0("Diseases for ", gene)) + xlab("Year of 1st trial")
p
ggplot(df, aes(x= as.Date(MinYear), y= id, size = nclinicaltrials, label=name)) +
geom_point(aes(fill="blue", alpha =0.5),  pch=21 )
as.Date(df$MinYear)
MinYear
df$MinYear
str(df$MinYear)
as.Date(ISOdate(df$MinYear, 1, 1))
ggplot(df, aes(x= as.Date(ISOdate(MinYear, 1, 1)), y= id, size = nclinicaltrials, label=name)) +
geom_point(aes(fill="blue", alpha =0.5),  pch=21 )   +
geom_text_repel(aes(label = label),
size = 3.5, max.overlaps = 20) +theme_bw(base_size = 12) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y")+
ylab(paste0("Diseases for ", gene)) + xlab("Year of 1st trial")
labs(size = "N Cts")  + theme(legend.position="none") +
scale_shape(guide="none") +
scale_fill_discrete(guide="none")+
theme(plot.title = element_text(size = 9, face = "bold"),
legend.title=element_text(size=9),
legend.text=element_text(size=9))
# mutate(disease=factor(name, levels=rev(sort(unique(name)))))
p<- ggplot(df, aes(x= as.Date(ISOdate(MinYear, 1, 1)), y= id, size = nclinicaltrials, label=name)) +
geom_point(aes(fill="blue", alpha =0.5),  pch=21 )   +
geom_text_repel(aes(label = label),
size = 3.5, max.overlaps = 20) +theme_bw(base_size = 12) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y")+
ylab(paste0("Diseases for ", gene)) + xlab("Year of 1st trial")
# mutate(disease=factor(name, levels=rev(sort(unique(name)))))
p<- ggplot(df, aes(x= as.Date(ISOdate(MinYear, 1, 1)), y= id, size = nclinicaltrials, label=name)) +
geom_point(aes(fill="blue", alpha =0.5),  pch=21 )   +
geom_text_repel(aes(label = label),
size = 3.5, max.overlaps = 20) +theme_bw(base_size = 12) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y")+
ylab(paste0("Diseases for ", gene)) + xlab("Year of 1st trial") +
labs(size = "N Cts")  + theme(legend.position="none") +
scale_shape(guide="none") +
scale_fill_discrete(guide="none")+
theme(plot.title = element_text(size = 9, face = "bold"),
legend.title=element_text(size=9),
legend.text=element_text(size=9))
p
p<- ggplot(df, aes(x= as.Date(ISOdate(MinYear, 1, 1)), y= id, size = nclinicaltrials, label=name)) +
geom_point(aes(fill="blue", alpha =0.5),  pch=21 )   +
geom_text_repel(aes(label = label),
size = 3.5, max.overlaps = 20) +theme_bw(base_size = 12) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y")+
ylab(paste0("Diseases for ", gene)) + xlab("Year of 1st trial")
p
str(p)
View(p)
p
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
poolClose(pool)
poolClose(pool)
runApp('Biomarkers_2022/Biomarkers-shiny')
runApp('Biomarkers_2022/Biomarkers-shiny')
shiny::runApp('biomarkers_2022/Biomarkers-shiny')
shiny::runApp('biomarkers_2022/Biomarkers-shiny')
shiny::runApp('biomarkers_2022/Biomarkers-shiny')
shiny::runApp('biomarkers_2022/Biomarkers-shiny')
shiny::runApp('biomarkers_2022/Biomarkers-shiny')
renderPlot(mtcars)
shiny::runApp('biomarkers_2022/Biomarkers-shiny')
shiny::runApp('biomarkers_2022/Biomarkers-shiny')
shiny::runApp('biomarkers_2022/Biomarkers-shiny')
shiny::runApp('biomarkers_2022/Biomarkers-shiny')
shiny::runApp('biomarkers_2022/Biomarkers-shiny')
shiny::runApp('biomarkers_2022/Biomarkers-shiny')
plot(mtcars)
shiny::runApp('biomarkers_2022/Biomarkers-shiny')
shiny::runApp('biomarkers_2022/Biomarkers-shiny')
shiny::runApp('biomarkers_2022/Biomarkers-shiny')
shiny::runApp('biomarkers_2022/Biomarkers-shiny')
shiny::runApp('biomarkers_2022/Biomarkers-shiny')
library(devtools)
install_bitbucket("ibi_group/disgenet2r")
library(disgenet2r)
results <- gene2disease( gene = c( "KCNE1", "KCNE2", "KCNH1", "KCNH2", "KCNG1"), verbose = TRUE)
shiny::runApp('biomarkers_2022/Biomarkers-shiny')
shiny::runApp('biomarkers_2022/Biomarkers-shiny')
shiny::runApp('biomarkers_2022/Biomarkers-shiny')
shiny::runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
library(disgenet2r)
results <- gene2disease( gene = c( "KCNE1", "KCNE2", "KCNH1", "KCNH2", "KCNG1"), verbose = TRUE)
get_disgenet_api_key(email = "pablo.rodriguez.bio2@gmail.com", password = "aB6Dnpf2GQdK73w" )
# [1] "05c34c7434f2836ef8f2ea4d84f71f38bb0791b5"
results <- gene2disease( gene = c( "KCNE1", "KCNE2", "KCNH1", "KCNH2", "KCNG1"),
verbose = TRUE, api_key = "05c34c7434f2836ef8f2ea4d84f71f38bb0791b5")
results
str(results)
results@qresult
r <-httr::POST(url = "https://www.disgenet.org/api/auth/",
httr::add_headers(.headers=c( `accept` = '*/*')),
body = list(`email` ="pablo.rodriguez.bio2@gmail.com",`password` = "aB6Dnpf2GQdK73w"))
r
str(r)
jsonlite::fromJSON(httr::content( r, as = "text", encoding = "UTF-8"), flatten = F)$token
# [1] "05c34c7434f2836ef8f2ea4d84f71f38bb0791b5"
results <- gene2disease( gene = c( "KCNE1", "KCNE2", "KCNH1", "KCNH2", "KCNG1"),
verbose = TRUE, api_key = "1f35b7de65d4d77f0a6234544b9ab52684137c42")
results@qresult
shiny::runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
install.packages("languageserver")
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
versions()
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
install.packages("BiocStyle")
BiocManager::install("BiocStyle")
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
runApp('biomarkers_2022/Biomarkers-shiny')
